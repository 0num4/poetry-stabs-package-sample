name: release-pypi(test and prod)
on:
  # release:
  #   types: [published]
  push:
    branches:
      - main
      - master
jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: print poetry version
        run: poetry --version
      - name: poetry version patch
        run: poetry version patch
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v$(poetry version | awk '{print $2}')" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: git tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: git tag -a "v$(poetry version | awk '{print $2}')" -m "v$(poetry version | awk '{print $2}')"
      - name: git push
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: git push origin "v$(poetry version | awk '{print $2}')"
      - name: build
        run: poetry build
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: ./dist/
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
      # - name: Build and publish
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
      #   run: |
      #     python setup.py sdist bdist_wheel
      #     python -m twine upload --repository testpypi dist/*
  pypi-publish-test:
    name: Publish to testpypi
    runs-on: ubuntu-latest
    env:
      name: pypi
      url: https://test.pypi.org/project/poetry-stabs-package-sample/
    needs: release
    permissions:
      id-token: write
    steps:
      - name: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: ./dist/
      - name: publish-testpypi
        id: publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
        continue-on-error: true
      - name: retry publish testpypi
        if: steps.publish.outcome == 'failure'
        uses: pypa/gh-action-pypi-publish@release/v1
        continue-on-error: true
      - name: retry publish-testpypi (2nd attempt)
        if: steps.publish.outcome == 'failure'
        uses: pypa/gh-action-pypi-publish@release/v1
  pypi-publish-prod:
    name: Publish to pypi
    runs-on: ubuntu-latest
    env:
      name: pypi
      url: https://pypi.org/project/poetry-stabs-package-sample/
    needs: release
    permissions:
      id-token: write
    steps:
      - name: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: ./dist/
      - name: publish-pypi-prod
        id: publish
        uses: pypa/gh-action-pypi-publish@release/v1
        continue-on-error: true
      - name: retry publish-pypi-prod
        if: steps.publish.outcome == 'failure'
        uses: pypa/gh-action-pypi-publish@release/v1
        continue-on-error: true
      - name: retry publish-pypi-prod (2nd attempt)
        if: steps.publish.outcome == 'failure'
        uses: pypa/gh-action-pypi-publish@release/v1
